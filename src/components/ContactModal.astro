---
interface Props {
  plan?: string;
}

const FORM_ENDPOINT = "https://formspree.io/f/mjkglyjd";
const { plan = "B√°sico" } = Astro.props;
---

<div id="contactModal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-[100] flex items-center justify-center p-4">
  <div class="bg-[var(--color-background)] w-full max-w-2xl relative" style="
    border: var(--border-brutal);
    box-shadow: var(--shadow-brutal);
  ">
    <button id="closeModal" class="absolute -top-4 -right-4 bg-black text-white w-8 h-8 flex items-center justify-center font-bold z-10" style="
      border: var(--border-brutal);
    ">√ó</button>

    <div class="p-4 sm:p-6">
      <h3 class="text-lg sm:text-xl lg:text-2xl font-bold mb-3 sm:mb-4 font-['JetBrains_Mono_Variable']">
        Plan {plan}
      </h3>

      <form action={FORM_ENDPOINT} method="POST" id="contactForm" class="grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4">
        <div class="sm:col-span-2">
          <label class="block mb-1 font-['JetBrains_Mono_Variable'] text-sm" for="name">
            Nombre
          </label>
          <input 
            type="text" 
            id="name" 
            name="name" 
            required
            minlength="2"
            class="w-full p-2 bg-white font-['Montserrat_Variable'] text-sm invalid:border-red-500"
            style="border: var(--border-brutal);"
          />
          <span class="text-red-500 text-xs mt-1 hidden error-message">Por favor, introduce un nombre v√°lido</span>
        </div>

        <div>
          <label class="block mb-1 font-['JetBrains_Mono_Variable'] text-sm" for="email">
            Correo Electr√≥nico
          </label>
          <input 
            type="email" 
            id="email" 
            name="email" 
            required
            pattern="[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}$"
            class="w-full p-2 bg-white font-['Montserrat_Variable'] text-sm invalid:border-red-500"
            style="border: var(--border-brutal);"
          />
          <span class="text-red-500 text-xs mt-1 hidden error-message">Por favor, introduce un email v√°lido</span>
        </div>

        <div>
          <label class="block mb-1 font-['JetBrains_Mono_Variable'] text-sm" for="phone">
            Tel√©fono
          </label>
          <input 
            type="tel" 
            id="phone" 
            name="phone" 
            required
            pattern="[0-9]{9}"
            class="w-full p-2 bg-white font-['Montserrat_Variable'] text-sm invalid:border-red-500"
            style="border: var(--border-brutal);"
          />
          <span class="text-red-500 text-xs mt-1 hidden error-message">Por favor, introduce un tel√©fono v√°lido (9 d√≠gitos)</span>
        </div>

        <div class="sm:col-span-2">
          <label class="block mb-1 font-['JetBrains_Mono_Variable'] text-sm" for="message">
            Cu√©ntanos sobre tu proyecto
          </label>
          <textarea 
            id="message" 
            name="message" 
            rows="2"
            required
            minlength="10"
            class="w-full p-2 bg-white font-['Montserrat_Variable'] text-sm resize-none invalid:border-red-500"
            style="border: var(--border-brutal);"
          ></textarea>
          <span class="text-red-500 text-xs mt-1 hidden error-message">Por favor, describe brevemente tu proyecto (m√≠nimo 10 caracteres)</span>
        </div>

        <div class="sm:col-span-2 flex flex-col sm:flex-row gap-3">
          <button 
            type="submit"
            id="submitButton"
            class="flex-1 bg-black text-white py-2 px-4 font-['JetBrains_Mono_Variable'] hover:bg-gray-800 transition-colors text-sm disabled:opacity-50 disabled:cursor-not-allowed"
            style="border: var(--border-brutal);"
          >
            Enviar
          </button>
          
          <a 
            href="https://wa.me/+34608962213" 
            target="_blank"
            class="flex-1 bg-[#25D366] text-white py-2 px-4 font-['JetBrains_Mono_Variable'] hover:bg-[#128C7E] transition-colors text-center text-sm"
            style="border: var(--border-brutal);"
          >
            WhatsApp
          </a>
        </div>
      </form>
    </div>
  </div>
</div>

<div id="successModal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-[110] flex items-center justify-center p-4">
  <div class="bg-[var(--color-background)] w-full max-w-md relative p-6" style="
    border: var(--border-brutal);
    box-shadow: var(--shadow-brutal);
  ">
    <div class="text-center">
      <div class="mb-4 text-4xl">‚ú®</div>
      <h3 class="text-xl font-bold mb-2 font-['JetBrains_Mono_Variable']">¬°Gracias!</h3>
      <p class="font-['Montserrat_Variable'] mb-6">Nos pondremos en contacto contigo pronto.</p>
      <button 
        class="bg-black text-white px-6 py-2 font-['JetBrains_Mono_Variable'] hover:bg-gray-800 transition-colors text-sm"
        style="border: var(--border-brutal);"
        onclick="document.getElementById('successModal').classList.add('hidden')"
      >
        Cerrar
      </button>
    </div>
  </div>
</div>

<div id="errorModal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-[110] flex items-center justify-center p-4">
  <div class="bg-[var(--color-background)] w-full max-w-md relative p-6" style="
    border: var(--border-brutal);
    box-shadow: var(--shadow-brutal);
  ">
    <div class="text-center">
      <div class="mb-4 text-4xl">üòï</div>
      <h3 class="text-xl font-bold mb-2 font-['JetBrains_Mono_Variable']">¬°Ups!</h3>
      <p class="font-['Montserrat_Variable'] mb-6">Ha ocurrido un error. Por favor, int√©ntalo de nuevo m√°s tarde.</p>
      <button 
        class="bg-black text-white px-6 py-2 font-['JetBrains_Mono_Variable'] hover:bg-gray-800 transition-colors text-sm"
        style="border: var(--border-brutal);"
        onclick="document.getElementById('errorModal').classList.add('hidden')"
      >
        Cerrar
      </button>
    </div>
  </div>
</div>

<script>
  const modal = document.getElementById('contactModal');
  const closeBtn = document.getElementById('closeModal');
  const form = document.getElementById('contactForm') as HTMLFormElement;
  const submitButton = document.getElementById('submitButton') as HTMLButtonElement;
  const inputs = form?.querySelectorAll('input, textarea');

  // Funci√≥n para validar el formulario
  function validateForm() {
    let isValid = true;
    inputs?.forEach(input => {
      const errorMessage = input.nextElementSibling;
      if (!(input as HTMLInputElement).checkValidity()) {
        isValid = false;
        errorMessage?.classList.remove('hidden');
      } else {
        errorMessage?.classList.add('hidden');
      }
    });
    return isValid;
  }

  // Validar en tiempo real
  inputs?.forEach(input => {
    input.addEventListener('input', () => {
      const errorMessage = input.nextElementSibling;
      if (!(input as HTMLInputElement).checkValidity()) {
        errorMessage?.classList.remove('hidden');
      } else {
        errorMessage?.classList.add('hidden');
      }
      submitButton.disabled = !validateForm();
    });
  });

  // Cerrar modal
  closeBtn?.addEventListener('click', () => {
    modal?.classList.add('hidden');
  });

  // Cerrar al hacer click fuera
  modal?.addEventListener('click', (e) => {
    if (e.target === modal) {
      modal.classList.add('hidden');
    }
  });

  // Manejar env√≠o del formulario
  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    if (!validateForm()) {
      return;
    }

    submitButton.disabled = true;
    submitButton.textContent = 'Enviando...';

    try {
      const response = await fetch(form.action, {
        method: 'POST',
        body: new FormData(form),
        headers: {
          'Accept': 'application/json'
        }
      });

      if (response.ok) {
        form.reset();
        modal?.classList.add('hidden');
        document.getElementById('successModal')?.classList.remove('hidden');
      } else {
        throw new Error('Error al enviar el formulario');
      }
    } catch (error) {
      document.getElementById('errorModal')?.classList.remove('hidden');
    } finally {
      submitButton.disabled = false;
      submitButton.textContent = 'Enviar';
    }
  });

  // Cerrar modales al hacer click fuera
  [document.getElementById('successModal'), document.getElementById('errorModal')].forEach(modal => {
    modal?.addEventListener('click', (e) => {
      if (e.target === modal) {
        modal.classList.add('hidden');
      }
    });
  });
</script> 