---
interface Props {
  formId?: string;
  className?: string;
  title?: string;
  description?: string;
  showWhatsApp?: boolean;
}

const {
  formId = "contactForm",
  className = "",
  title = "¿Hablamos de tu proyecto?",
  description = "Cuéntanos sobre tu proyecto y nos pondremos en contacto contigo lo antes posible.",
  showWhatsApp = true
} = Astro.props;

const FORM_ENDPOINT = "https://formspree.io/f/mjkglyjd";
---

<div class={`bg-[var(--color-background-offset)] rounded-lg p-4 sm:p-6 ${className}`}>
  <h3 class="text-base sm:text-lg font-bold mb-4 sm:mb-5 text-white font-sans">
    {title}
  </h3>
  
  <p class="text-white/90 text-sm mb-4 sm:mb-5 font-sans">
    {description}
  </p>
  
  <form action={FORM_ENDPOINT} method="POST" id={formId} class="grid grid-cols-1 gap-3 sm:gap-4">
    <div>
      <label class="block mb-1 sm:mb-1.5 font-sans text-xs sm:text-sm text-white/90" for={`${formId}-name`}>
        Nombre
      </label>
      <input 
        type="text" 
        id={`${formId}-name`} 
        name="name" 
        required
        class="w-full p-2 sm:p-2.5 bg-white border-b-2 border-[var(--color-primary)] rounded-t-md font-sans text-sm placeholder:text-[var(--color-text-offset)]/60 focus:outline-none focus:border-[var(--color-secondary)] transition-colors"
        placeholder="Tu nombre"
      />
    </div>

    <div>
      <label class="block mb-1 sm:mb-1.5 font-sans text-xs sm:text-sm text-white/90" for={`${formId}-email`}>
        Correo Electrónico
      </label>
      <input 
        type="email" 
        id={`${formId}-email`} 
        name="email"
        required
        class="w-full p-2 sm:p-2.5 bg-white border-b-2 border-[var(--color-primary)] rounded-t-md font-sans text-sm placeholder:text-[var(--color-text-offset)]/60 focus:outline-none focus:border-[var(--color-secondary)] transition-colors"
        placeholder="tu@email.com"
      />
    </div>

    <input type="text" name="_gotcha" style="display:none" />

    <div>
      <label class="block mb-1 sm:mb-1.5 font-sans text-xs sm:text-sm text-white/90" for={`${formId}-phone`}>
        Teléfono
      </label>
      <input 
        type="tel" 
        id={`${formId}-phone`} 
        name="phone" 
        required
        class="w-full p-2 sm:p-2.5 bg-white border-b-2 border-[var(--color-primary)] rounded-t-md font-sans text-sm placeholder:text-[var(--color-text-offset)]/60 focus:outline-none focus:border-[var(--color-secondary)] transition-colors"
        placeholder="600000000"
      />
    </div>

    <div>
      <label class="block mb-1 sm:mb-1.5 font-sans text-xs sm:text-sm text-white/90" for={`${formId}-message`}>
        Cuéntanos sobre tu proyecto
      </label>
      <textarea 
        id={`${formId}-message`} 
        name="message" 
        rows="2"
        required
        class="w-full p-2 sm:p-2.5 bg-white border-b-2 border-[var(--color-primary)] rounded-t-md font-sans text-sm placeholder:text-[var(--color-text-offset)]/60 focus:outline-none focus:border-[var(--color-secondary)] transition-colors resize-none"
        placeholder="Describe brevemente tu proyecto..."
      ></textarea>
    </div>

    <div class="flex flex-col sm:flex-row gap-2 sm:gap-3 mt-1 sm:mt-2">
      <button 
        id={`${formId}SubmitButton`}
        class="flex-1 bg-[var(--color-secondary)] text-[var(--color-text)] py-2 sm:py-2.5 px-6 rounded-md font-sans text-sm hover:bg-white/90 transition-colors disabled:bg-white/20 disabled:text-white/60 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-[var(--color-secondary)]"
        disabled
      >
        Enviar
      </button>
      
      {showWhatsApp && (
        <a 
          href="https://wa.me/+34608962213" 
          target="_blank"
          class="flex-1 bg-[#25D366] text-white hover:text-white py-2 sm:py-2.5 px-6 rounded-md font-sans text-sm hover:bg-[#25D366]/90 transition-colors text-center focus:outline-none focus:ring-2 focus:ring-[#25D366] focus:ring-offset-2 focus:ring-offset-[var(--color-secondary)]"
        >
          Escríbenos por WhatsApp
        </a>
      )}
    </div>
  </form>
</div>

<script define:vars={{ formId }}>  
  const form = document.getElementById(formId);
  
  const submitButton = document.getElementById(`${formId}SubmitButton`);
  
  const requiredInputs = form?.querySelectorAll(`#${formId} input[required], #${formId} textarea[required]`);

  // Deshabilitar el botón inicialmente
  if (submitButton) {
    submitButton.disabled = true;
  }

  // Función para verificar que todos los campos requeridos estén completos
  function checkFormValidity() {
    if (!requiredInputs) return false;
    const isValid = Array.from(requiredInputs).every(input => input.value.trim() !== '');
    console.log('Validación del formulario:', isValid);
    return isValid;
  }

  // Validar en tiempo real
  requiredInputs?.forEach(input => {
    input.addEventListener('input', () => {
      console.log('Campo modificado:', input.id);
      if (submitButton) {
        const isValid = checkFormValidity();
        submitButton.disabled = !isValid;
        console.log('Estado del botón:', !isValid ? 'habilitado' : 'deshabilitado');
      }
    });
  });

  // Manejar envío del formulario
  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    submitButton.disabled = true;
    submitButton.textContent = 'Enviando...';

    try {
      const formData = new FormData(form);
      const response = await fetch(form.action, {
        method: 'POST',
        body: formData,
        headers: {
          'Accept': 'application/json'
        }
      });

      if (!response.ok) {
        const data = await response.json();
        throw new Error(`Error al enviar el formulario: ${data.error || response.statusText}`);
      }

      const data = await response.json();

      if (data.ok) {
        form.reset();
        document.getElementById('successModal')?.classList.remove('hidden');
        // Mantener el botón deshabilitado después de un envío exitoso
        submitButton.disabled = true;
        // @ts-ignore
        window.dataLayer?.push({
          event: 'form_submit',
          form_name: formId,
          form_status: 'success'
        });
      } else {
        throw new Error('Error al enviar el formulario');
      }
    } catch (error) {
      console.error('Error:', error);
      document.getElementById('errorModal')?.classList.remove('hidden');
      // En caso de error, habilitar el botón para reintentar
      submitButton.disabled = false;
      // @ts-ignore
      window.dataLayer?.push({
        event: 'form_submit',
        form_name: formId,
        form_status: 'error'
      });
    } finally {
      submitButton.textContent = 'Enviar';
    }
  });
</script> 