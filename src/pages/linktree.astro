---
import LinkCard from "../components/LinkCard.astro";
import ProfileSection from "../components/ProfileSection.astro";
import SocialLinks from "../components/SocialLinks.astro";
import StatsSection from "../components/StatsSection.astro";

// Importar estilos de tema
import "../styles/theme.css";

// Configuración del perfil
const profile = {
  name: "David Pérez",
  title: "Desarrollador Frontend & Diseñador Web",
  bio: "Experto en programación web y diseño moderno. Creando experiencias digitales excepcionales.",
  avatar: "/me.jpg",
  location: "Benidorm, España",
};

// Enlaces principales
const mainLinks = [
  {
    href: "/portfolio",
    title: "Portfolio Web",
    description: "Explora mis proyectos y trabajos más recientes",
    icon: "website",
    featured: false,
  },
  {
    href: "/desarrollo-web-benidorm",
    title: "Desarrollo Web Benidorm",
    description: "Servicios de desarrollo web profesional",
    icon: "code",
  },
  {
    href: "https://wa.me/+34608962213",
    title: "WhatsApp",
    description: "Hablemos por WhatsApp",
    icon: "chat",
    external: true,
  },
  {
    href: "mailto:frappecreativity@gmail.com",
    title: "Contacto Directo",
    description: "Envíame un email para proyectos o consultas",
    icon: "email",
    external: false,
  },
];

// Enlaces sociales
const socialLinks = [
  {
    name: "LinkedIn",
    url: "https://linkedin.com/in/davidperez8619",
    icon: "linkedin",
    color: "secondary",
  },
  {
    name: "GitHub",
    url: "https://github.com/puruwin",
    icon: "github",
    color: "primary",
  },
];

// Estadísticas opcionales
const stats = [
  {
    label: "Proyectos",
    value: "25+",
    icon: "projects",
  },
  {
    label: "Clientes",
    value: "10+",
    icon: "clients",
  },
  {
    label: "Años",
    value: "6+",
    icon: "experience",
  },
  {
    label: "Rating",
    value: "5.0",
    icon: "rating",
  },
];

// Meta tags para SEO
const title = `${profile.name} - ${profile.title}`;
const description = `${profile.bio} Encuentra todos mis enlaces en un solo lugar.`;
---

<!doctype html>
<html lang="es" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title}</title>
    <meta name="description" content={description} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content="https://creativefrappe.com/linktree" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content="/og-image.jpg" />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta
      property="twitter:url"
      content="https://creativefrappe.com/linktree"
    />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content="/og-image.jpg" />

    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="/frappe_icon.svg" />

    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />
  </head>

  <body
    class="bg-white font-sans antialiased dark:bg-gray-900"
    style="font-family: var(--font-sans);"
  >
    <!-- Hero Gradient Wave Section -->
    <div class="relative h-40 overflow-hidden">
      <!-- Gradient Background -->
      <div
        class="absolute inset-0 bg-gradient-to-r from-[#f9d034] via-[#29c1f1] to-[#f5478f]"
      >
      </div>

      <!-- Wave Shape -->
      <svg
        class="absolute bottom-0 left-0 h-20 w-full text-white dark:text-gray-900"
        preserveAspectRatio="none"
        viewBox="0 0 1440 200"
        xmlns="http://www.w3.org/2000/svg"
      >
        <!-- Onda principal más orgánica -->
        <path
          fill="currentColor"
          d="M0,80 Q120,50 240,80 T480,80 Q600,50 720,80 T960,80 Q1080,50 1200,80 T1440,80 L1440,200 L0,200 Z"
        ></path>
        <!-- Segunda capa con ondas más amplias -->
        <path
          fill="currentColor"
          fill-opacity="0.6"
          d="M0,120 Q180,90 360,120 T720,120 Q900,90 1080,120 T1440,120 L1440,200 L0,200 Z"
        ></path>
        <!-- Tercera capa más sutil -->
        <path
          fill="currentColor"
          fill-opacity="0.3"
          d="M0,150 Q240,140 480,150 T960,150 Q1200,140 1440,150 L1440,200 L0,200 Z"
        ></path>
      </svg>

      <!-- Content area with padding -->
      <div
        class="relative z-10 flex h-full items-center justify-between px-4 sm:px-6 lg:px-8"
      >
        <!-- Empty left side -->
        <div></div>

        <!-- Theme Toggle -->
        <div>
          <button
            id="theme-toggle"
            type="button"
            class="rounded-lg p-2.5 text-white/90 ring-4 ring-white/30 transition-all duration-200 text-sm hover:bg-white/20 hover:text-white focus:outline-none"
            aria-label="Cambiar tema"
          >
            <!-- Icono Luna (modo oscuro - se muestra cuando está en modo claro) -->
            <svg
              id="theme-toggle-dark-icon"
              class="h-5 w-5"
              fill="currentColor"
              viewBox="0 0 20 20"
            >
              <path
                d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"
              ></path>
            </svg>
            <!-- Icono Sol (modo claro - se muestra cuando está en modo oscuro) -->
            <svg
              id="theme-toggle-light-icon"
              class="hidden h-5 w-5"
              fill="currentColor"
              viewBox="0 0 20 20"
            >
              <path
                fill-rule="evenodd"
                d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
                clip-rule="evenodd"></path>
            </svg>
          </button>
        </div>
      </div>
    </div>

    <!-- Main Container -->
    <div
      class="relative min-h-screen bg-gray-50 px-4 sm:px-6 lg:px-8 dark:bg-gray-900"
    >
      <div class="mx-auto mt-10 max-w-md space-y-8">
        <!-- Profile Section -->
        <div class="relative z-20">
          <ProfileSection
            name={profile.name}
            title={profile.title}
            bio={profile.bio}
            avatar={profile.avatar}
            location={profile.location}
          />
        </div>

        <!-- Social Links -->
        <SocialLinks links={socialLinks} />

        <!-- Stats Section -->
        <StatsSection stats={stats} />

        <!-- Main Links -->
        <div class="space-y-4">
          {
            mainLinks.map((link) => (
              <LinkCard
                href={link.href}
                title={link.title}
                description={link.description}
                icon={link.icon}
                external={link.external}
                featured={link.featured}
              />
            ))
          }
        </div>

        <!-- Footer -->
        <footer class="pt-8 text-center">
          <p class="text-gray-500 text-sm dark:text-gray-400">
            © {new Date().getFullYear()}
            {profile.name}. Hecho con ❤️ en Astro.
          </p>
        </footer>
      </div>
    </div>

    <!-- Theme Toggle Script -->
    <script>
      // Inicializar tema inmediatamente para evitar flash
      (function () {
        const stored = localStorage.getItem("theme");
        const prefersDark = window.matchMedia(
          "(prefers-color-scheme: dark)",
        ).matches;

        // Si no hay preferencia guardada, usar la del sistema
        const theme = stored || (prefersDark ? "dark" : "light");

        if (theme === "dark") {
          document.documentElement.classList.add("dark");
        }
      })();

      document.addEventListener("DOMContentLoaded", function () {
        const themeToggle = document.getElementById("theme-toggle");
        const darkIcon = document.getElementById("theme-toggle-dark-icon");
        const lightIcon = document.getElementById("theme-toggle-light-icon");

        function updateIcons(isDark: boolean) {
          if (isDark) {
            // Modo oscuro activo - mostrar icono de sol para cambiar a claro
            darkIcon?.classList.add("hidden");
            lightIcon?.classList.remove("hidden");
          } else {
            // Modo claro activo - mostrar icono de luna para cambiar a oscuro
            darkIcon?.classList.remove("hidden");
            lightIcon?.classList.add("hidden");
          }
        }

        function setTheme(theme: string, savePreference: boolean = true) {
          const isDark = theme === "dark";

          if (isDark) {
            document.documentElement.classList.add("dark");
          } else {
            document.documentElement.classList.remove("dark");
          }

          // Solo guardar en localStorage si el usuario hace click manual
          if (savePreference) {
            localStorage.setItem("theme", theme);
          }

          updateIcons(isDark);
        }

        function getCurrentTheme() {
          const stored = localStorage.getItem("theme");
          if (stored) {
            return stored;
          }
          // Si no hay preferencia guardada, usar la del sistema
          return window.matchMedia("(prefers-color-scheme: dark)").matches
            ? "dark"
            : "light";
        }

        function getSystemTheme() {
          return window.matchMedia("(prefers-color-scheme: dark)").matches
            ? "dark"
            : "light";
        }

        // Inicializar tema
        const currentTheme = getCurrentTheme();
        setTheme(currentTheme, false); // No guardar la preferencia inicial

        // Event listener para el toggle manual
        themeToggle?.addEventListener("click", function () {
          const current = getCurrentTheme();
          const newTheme = current === "dark" ? "light" : "dark";
          setTheme(newTheme, true); // Guardar la preferencia manual
        });

        // Escuchar cambios en las preferencias del sistema
        window
          .matchMedia("(prefers-color-scheme: dark)")
          .addEventListener("change", function (e) {
            const hasStoredPreference = localStorage.getItem("theme");

            // Solo cambiar automáticamente si el usuario no ha configurado una preferencia manual
            if (!hasStoredPreference) {
              setTheme(e.matches ? "dark" : "light", false);
            }
          });

        // Botón para resetear a preferencias del sistema (opcional)
        // Puedes agregar un doble click para resetear a las preferencias del sistema
        let clickCount = 0;
        themeToggle?.addEventListener("click", function () {
          clickCount++;
          setTimeout(() => {
            if (clickCount === 2) {
              // Doble click: resetear a preferencias del sistema
              localStorage.removeItem("theme");
              const systemTheme = getSystemTheme();
              setTheme(systemTheme, false);
              console.log(
                "Tema reseteado a preferencias del sistema:",
                systemTheme,
              );
            }
            clickCount = 0;
          }, 300);
        });
      });
    </script>

    <!-- Smooth Animations & Theme Styles -->
    <style>
      @keyframes fadeInUp {
        from {
          opacity: 0;
          transform: translateY(30px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      .animate-fade-in-up {
        animation: fadeInUp 0.6s ease-out forwards;
      }

      /* Evitar flash de contenido no temático */
      html {
        transition: background-color 0.3s ease;
      }

      /* Mejorar transiciones en modo oscuro */
      * {
        transition:
          background-color 0.3s ease,
          border-color 0.3s ease,
          color 0.3s ease;
      }

      /* Stagger animation delays */
      .space-y-4 > *:nth-child(1) {
        animation-delay: 0.1s;
      }
      .space-y-4 > *:nth-child(2) {
        animation-delay: 0.2s;
      }
      .space-y-4 > *:nth-child(3) {
        animation-delay: 0.3s;
      }
      .space-y-4 > *:nth-child(4) {
        animation-delay: 0.4s;
      }
      .space-y-4 > *:nth-child(5) {
        animation-delay: 0.5s;
      }
      .space-y-4 > *:nth-child(6) {
        animation-delay: 0.6s;
      }

      body {
        font-family:
          "Inter",
          -apple-system,
          BlinkMacSystemFont,
          "Segoe UI",
          "Roboto",
          sans-serif;
      }

      /* Scroll behavior */
      html {
        scroll-behavior: smooth;
      }

      /* Focus styles */
      *:focus {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    </style>
  </body>
</html>
